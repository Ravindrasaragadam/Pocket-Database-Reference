<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent" >


    <!-- TODO: Update blank fragment layout -->
    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">


        <TextView
            android:text="Loss of Volatile Storage\n"
            android:textSize="20sp"
            android:textStyle="bold"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="22dp"
            android:id="@+id/textView11"
            android:layout_alignParentTop="true" />

        <TextView
            android:text="A volatile storage like RAM stores all the active logs, disk buffers, and related data. In addition, it stores all the transactions that are being currently executed. What happens if such a volatile storage crashes abruptly? It would obviously take away all the logs and active copies of the database. It makes recovery almost impossible, as everything that is required to recover the data is lost.\n"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="12dp"
            android:id="@+id/textView12"
            android:layout_below="@+id/textView11"
            android:layout_alignParentStart="true" />

        <TextView
            android:text="Following techniques may be adopted in case of loss of volatile storage −\n
->We can have checkpoints at multiple stages so as to save the contents of the database periodically.\n->A state of active database in the volatile memory can be periodically dumped onto a stable storage, which may also contain logs and active transactions and buffer blocks.\n->DUMP can be marked on a log file, whenever the database contents are dumped from a non-volatile memory to a stable one.\n\n"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView12"
            android:layout_alignParentStart="true"
            android:id="@+id/textView13" />

        <TextView
            android:text="Recovery\n"
            android:textSize="20sp"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView13"
            android:layout_alignParentStart="true"
            android:textStyle="bold"
            android:id="@+id/textView14" />
        <TextView
            android:text="When the system recovers from a failure, it can restore the latest dump.\n
It can maintain a redo-list and an undo-list as checkpoints.\n
It can recover the system by consulting undo-redo lists to restore the state of all transactions up to the last checkpoint.\n\n"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView14"
            android:layout_alignParentStart="true"
            android:id="@+id/textView15" />
        <TextView
            android:text="Remote Backup"
            android:textSize="20sp"
            android:textStyle="bold"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView15"
            android:layout_alignParentStart="true"
            android:id="@+id/textView16" />
        <TextView
            android:text="
            Remote backup provides a sense of security in case the primary location where the database is located gets destroyed. Remote backup can be offline or real-time or online. In case it is offline, it is maintained manually.\n
            Online backup systems are more real-time and lifesavers for database administrators and investors. An online backup system is a mechanism where every bit of the real-time data is backed up simultaneously at two distant places. One of them is directly connected to the system and the other one is kept at a remote place as backup.\n
            As soon as the primary database storage fails, the backup system senses the failure and switches the user system to the remote storage. Sometimes this is so instant that the users can’t even realize a failure."
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView16"
            android:layout_alignParentStart="true"
            android:id="@+id/textView17" />

    </RelativeLayout>
</ScrollView>
