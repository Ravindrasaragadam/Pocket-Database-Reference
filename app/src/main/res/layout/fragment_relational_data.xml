<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent" >


    <!-- TODO: Update blank fragment layout -->
    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">


        <TextView
            android:text="Relational data model is the primary data model, which is used widely around the world for data storage and processing. This model is simple and it has all the properties and capabilities required to process data with storage efficiency.\n"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="22dp"
            android:id="@+id/textView11"
            android:layout_alignParentTop="true"
            android:layout_centerHorizontal="true" />

        <TextView
            android:text="Concepts\n"
            android:textSize="20sp"
            android:textStyle="bold"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="12dp"
            android:id="@+id/textView12"
            android:layout_below="@+id/textView11"
            android:layout_alignParentStart="true" />

        <TextView
            android:text="1)Tables\n2)Tuple\n3)Relation instance\n4)Relation schema\n5)Relation key\n6)Attribute domain\n\n"
            android:textStyle="bold"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView12"
            android:layout_alignParentStart="true"
            android:id="@+id/textView13" />

        <TextView
            android:text="Constraints\n"
            android:textSize="20sp"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView13"
            android:layout_alignParentStart="true"
            android:textStyle="bold"
            android:id="@+id/textView14" />
        <TextView
            android:text="->Key constraints\n
->Domain constraints\n
->Referential integrity constraints\n\n"
            android:layout_width="wrap_content"
            android:textStyle="bold"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView14"
            android:layout_alignParentStart="true"
            android:id="@+id/textView15" />
        <TextView
            android:text="Key Constraints\n"
            android:textSize="17sp"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView15"
            android:textStyle="bold"
            android:layout_alignParentStart="true"
            android:id="@+id/textView16" />
        <TextView
            android:text="There must be at least one minimal subset of attributes in the relation, which can identify a tuple uniquely. This minimal subset of attributes is called key for that relation. If there are more than one such minimal subsets, these are called candidate keys.\n"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView16"
            android:layout_alignParentStart="true"
            android:id="@+id/textView17" />
        <TextView
            android:text="Domain Constraints\n"
            android:textSize="17sp"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView17"
            android:textStyle="bold"
            android:layout_alignParentStart="true"
            android:id="@+id/textView18" />
        <TextView
            android:text="Attributes have specific values in real-world scenario. For example, age can only be a positive integer. The same constraints have been tried to employ on the attributes of a relation. Every attribute is bound to have a specific range of values. For example, age cannot be less than zero and telephone numbers cannot contain a digit outside 0-9.\n"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView18"
            android:layout_alignParentStart="true"
            android:id="@+id/textView19" />
        <TextView
            android:text="Referential integrity Constraints\n"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView19"
            android:textSize="17sp"
            android:textStyle="bold"
            android:layout_alignParentStart="true"
            android:id="@+id/textView20" />
        <TextView
            android:text="Referential integrity constraints work on the concept of Foreign Keys. A foreign key is a key attribute of a relation that can be referred in other relation.\n

Referential integrity constraint states that if a relation refers to a key attribute of a different or same relation, then that key element must exist.\n"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView20"
            android:layout_alignParentStart="true"
            android:id="@+id/textView21" />

    </RelativeLayout>
</ScrollView>
